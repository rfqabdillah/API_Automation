{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-03T07:15:01.598Z",
    "end": "2025-09-03T07:15:04.385Z",
    "duration": 2787,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1ad345c6-de4f-4565-9cec-24a62d217242",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "71a4b4b7-7f7c-41ea-a94f-44f19d785b0d",
          "title": "Positive Case Test API Reqres",
          "fullFile": "C:\\Users\\ACER\\Sesi7_API_Automation\\tests\\reqresTest.js",
          "file": "\\tests\\reqresTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET: should get user list on page 2",
              "fullTitle": "Positive Case Test API Reqres GET: should get user list on page 2",
              "timedOut": false,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/users?page=2\");\nconst duration = Date.now() - startTime;\nconst data = await response.json();\nexpect(response.status).to.equal(200); // Cek apakah status HTTP adalah 200 (OK)\nassert.strictEqual(data.page, 2); // Cek apakah nomor halaman pada body respons adalah 2  \nexpect(data.data).to.be.an(\"array\"); // Cek apakah data berbentuk array \nexpect(data.data[0]).to.have.property('email'); // Cek bahwa objek pengguna pertama memiliki properti 'email'\nassert.strictEqual(data.data[0].id, 7); // Cek bahwa ID pengguna pertama di halaman 2 adalah 7\nexpect(duration).to.be.lessThan(1000); // Cek bahwa durasi permintaan kurang dari 1000ms",
              "err": {},
              "uuid": "96f49d4b-e1d2-4522-aa77-b4875661b2a5",
              "parentUUID": "71a4b4b7-7f7c-41ea-a94f-44f19d785b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET: should get user with id 2",
              "fullTitle": "Positive Case Test API Reqres GET: should get user with id 2",
              "timedOut": false,
              "duration": 52,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/users/2\");  // Lakukan request GET ke endpoint untuk user ID 2\nconst duration = Date.now() - startTime;\nconst data = await response.json();\nexpect(response.status).to.equal(200); // Cek apakah status HTTP adalah 200 (OK)\nexpect(data.data).to.be.an(\"object\"); // Cek bahwa properti 'data' adalah sebuah objek\nassert.strictEqual(data.data.id, 2); // Cek bahwa ID pengguna di dalam data adalah 2\n// Cek bahwa data pengguna memiliki properti yang diharapkan\nexpect(data.data).to.have.property('email');\nexpect(data.data).to.have.property('first_name');\nexpect(data.data).to.have.property('last_name');\nexpect(duration).to.be.lessThan(1000);  // Cek bahwa durasi permintaan kurang dari 1000ms",
              "err": {},
              "uuid": "cdd077fa-6abe-4dd3-ac4b-c18264ec505e",
              "parentUUID": "71a4b4b7-7f7c-41ea-a94f-44f19d785b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST: should create a new user",
              "fullTitle": "Positive Case Test API Reqres POST: should create a new user",
              "timedOut": false,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/users\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n  body: JSON.stringify({\n    name: \"rifqi abdillah\",\n    job: \"leader\"\n  })\n});\nconst duration = Date.now() - startTime;\nconst data = await response.json();\nexpect(response.status).to.equal(201); // Cek status HTTP adalah 201 (created)\nexpect(data).to.have.property(\"name\", \"rifqi abdillah\");\nexpect(data).to.have.property(\"job\", \"leader\");\nexpect(data).to.have.property(\"id\"); // Pastikan ID ada di respons\nexpect(duration).to.be.lessThan(1000); // Cek bahwa durasi permintaan kurang dari 1000ms",
              "err": {},
              "uuid": "c3ee8b45-f5ae-4084-af17-8ed54c06859f",
              "parentUUID": "71a4b4b7-7f7c-41ea-a94f-44f19d785b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PATCH: should update user info",
              "fullTitle": "Positive Case Test API Reqres PATCH: should update user info",
              "timedOut": false,
              "duration": 268,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/users/2\", {\n  method: \"PATCH\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n  body: JSON.stringify({\n    name: \"rifqi abdillah\",\n    job: \"developer\"\n  })\n});\nconst duration = Date.now() - startTime;\nconst data = await response.json();\nexpect(response.status).to.equal(200);\nexpect(data).to.have.property(\"name\", \"rifqi abdillah\");\nexpect(data).to.have.property(\"job\", \"developer\");\nexpect(duration).to.be.lessThan(1000);",
              "err": {},
              "uuid": "b9498c80-9d54-423a-8c55-632d70ef2132",
              "parentUUID": "71a4b4b7-7f7c-41ea-a94f-44f19d785b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE: should delete user",
              "fullTitle": "Positive Case Test API Reqres DELETE: should delete user",
              "timedOut": false,
              "duration": 373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/users/2\", {\n  method: \"DELETE\",\n  headers: {\n    \"x-api-key\": \"reqres-free-v1\"\n  }\n});\nconst duration = Date.now() - startTime;\nexpect(response.status).to.equal(204); // Cek status, harus 204 (No Content)\nexpect(duration).to.be.lessThan(1000); // Cek bahwa durasi permintaan kurang dari 1000ms",
              "err": {},
              "uuid": "a315f2ec-e75a-47ae-b930-ad956e8b4225",
              "parentUUID": "71a4b4b7-7f7c-41ea-a94f-44f19d785b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST: should register a user successfully",
              "fullTitle": "Positive Case Test API Reqres POST: should register a user successfully",
              "timedOut": false,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/register\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n  body: JSON.stringify({\n    email: \"eve.holt@reqres.in\",\n    password: \"pistol\"\n  })\n});\nconst duration = Date.now() - startTime;\nconst data = await response.json();\nexpect(response.status).to.equal(200); // Cek status, harus 200 (OK)\n// Cek bahwa respons memiliki properti 'id' dan 'token'\nexpect(data).to.have.property(\"id\");\nexpect(data).to.have.property(\"token\");\nexpect(data.token).to.be.a('string'); // Pastikan tipe data token adalah string\nexpect(duration).to.be.lessThan(1000); // Cek bahwa durasi permintaan kurang dari 1000ms",
              "err": {},
              "uuid": "b56b651d-d9fb-4ccf-bf3d-789971079f88",
              "parentUUID": "71a4b4b7-7f7c-41ea-a94f-44f19d785b0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST: should login a user successfully",
              "fullTitle": "Positive Case Test API Reqres POST: should login a user successfully",
              "timedOut": false,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/login\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n  body: JSON.stringify({\n    email: \"eve.holt@reqres.in\",\n    password: \"cityslicka\"\n  })\n});\nconst duration = Date.now() - startTime;\nconst data = await response.json();\nexpect(response.status).to.equal(200); // Cek status, harus 200 (OK)\nexpect(data).to.have.property(\"token\"); // Cek bahwa respons memiliki properti 'token'\nexpect(data.token).to.not.be.empty; // Pastikan token yang diterima tidak kosong\nexpect(duration).to.be.lessThan(1000); // Cek bahwa durasi permintaan kurang dari 1000ms",
              "err": {},
              "uuid": "be029068-15d4-46a0-abdf-412282ddce92",
              "parentUUID": "71a4b4b7-7f7c-41ea-a94f-44f19d785b0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96f49d4b-e1d2-4522-aa77-b4875661b2a5",
            "cdd077fa-6abe-4dd3-ac4b-c18264ec505e",
            "c3ee8b45-f5ae-4084-af17-8ed54c06859f",
            "b9498c80-9d54-423a-8c55-632d70ef2132",
            "a315f2ec-e75a-47ae-b930-ad956e8b4225",
            "b56b651d-d9fb-4ccf-bf3d-789971079f88",
            "be029068-15d4-46a0-abdf-412282ddce92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1765,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bb9bab28-fe3d-485c-88e7-6726c54e2d5a",
          "title": "Negative Case Test API Reqres",
          "fullFile": "C:\\Users\\ACER\\Sesi7_API_Automation\\tests\\reqresTest.js",
          "file": "\\tests\\reqresTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET: should fail to get user with non-existent id 26 (Not Found)",
              "fullTitle": "Negative Case Test API Reqres GET: should fail to get user with non-existent id 26 (Not Found)",
              "timedOut": false,
              "duration": 471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/users/26\",\n  {\n  method: \"GET\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n});  // Lakukan request GET ke endpoint untuk user ID 2\nconst duration = Date.now() - startTime;\nexpect(response.status).to.equal(404); // Cek apakah status HTTP adalah 404 (Not Found)\nexpect(duration).to.be.lessThan(1000);  // Cek bahwa durasi permintaan kurang dari 1000ms",
              "err": {},
              "uuid": "708225ac-2b7c-400c-80d9-67db878303b2",
              "parentUUID": "bb9bab28-fe3d-485c-88e7-6726c54e2d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST: should fail to register without a password (Bad Request)",
              "fullTitle": "Negative Case Test API Reqres POST: should fail to register without a password (Bad Request)",
              "timedOut": false,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/register\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n  body: JSON.stringify({ email: \"sydney@fife\" }) // Hanya mengirim email\n});\nconst duration = Date.now() - startTime;\nconst data = await response.json();\n\nexpect(response.status).to.equal(400); // Status harus 400 (Bad Request)\nexpect(data).to.have.property(\"error\", \"Missing password\"); // Respons body harus berisi pesan error yang sesuai\nexpect(duration).to.be.lessThan(1000); // Cek bahwa durasi permintaan kurang dari 1000ms",
              "err": {},
              "uuid": "5682d5b3-0a97-4978-9b6c-e21887714077",
              "parentUUID": "bb9bab28-fe3d-485c-88e7-6726c54e2d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST: should fail to login without a password (Bad Request)",
              "fullTitle": "Negative Case Test API Reqres POST: should fail to login without a password (Bad Request)",
              "timedOut": false,
              "duration": 271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const startTime = Date.now();\nconst response = await fetch(\"https://reqres.in/api/login\", {\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": \"reqres-free-v1\"\n  },\n  body: JSON.stringify({ email: \"peter@klaven\" }) // Hanya mengirim email\n});\nconst duration = Date.now() - startTime;\nconst data = await response.json();\nexpect(response.status).to.equal(400); // Status harus 400 (Bad Request)\nexpect(data).to.have.property(\"error\", \"Missing password\"); // Respons body harus berisi pesan error yang sesuai\nexpect(duration).to.be.lessThan(1000); // Cek bahwa durasi permintaan kurang dari 1000ms",
              "err": {},
              "uuid": "1054f480-6447-4646-9af9-b09759d4dcec",
              "parentUUID": "bb9bab28-fe3d-485c-88e7-6726c54e2d5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "708225ac-2b7c-400c-80d9-67db878303b2",
            "5682d5b3-0a97-4978-9b6c-e21887714077",
            "1054f480-6447-4646-9af9-b09759d4dcec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 992,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.6.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}